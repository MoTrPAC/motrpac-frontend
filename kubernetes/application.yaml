---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${_LABEL_NAME}
  labels:
    app.kubernetes.io/name: ${_LABEL_NAME}
spec:
  replicas: 1
  selector:
    matchLabels:
      run: ${_LABEL_NAME}
  template:
    metadata:
      labels:
        run: ${_LABEL_NAME}
    spec:
      serviceAccountName: ${_KSA_NAME}
      nodeSelector:
        iam.gke.io/gke-metadata-server-enabled: "true"
      containers:
      - name: ${_LABEL_NAME}
        image: us-west1-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO}/${_SERVICE_NAME}-${_ENV}:${SHORT_SHA} 
        imagePullPolicy: Always
        ports:
          - containerPort: ${_SERVER_PORT}
            hostPort: ${_SERVER_PORT}
            protocol: TCP
            # the name cannot be longer than 15 chars
            name: frontend-prt
---
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: ${_MANAGED_CERT_NAME}
spec:
  domains:
    - ${_HOSTNAME}
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: ${_LABEL_NAME}-backendconfig
spec:
  timeoutSec: 6000
  connectionDraining:
    drainingTimeoutSec: 600
---
apiVersion: v1
kind: Service
metadata:
  name: ${_LABEL_NAME}
  labels:
    run: ${_LABEL_NAME}
  annotations:
    cloud.google.com/backend-config: '{"ports": {"80":"${_LABEL_NAME}-backendconfig"}}'
    cloud.google.com/neg: '{"ingress": true}'
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
  selector:
    run: ${_LABEL_NAME}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ${_LABEL_NAME}
  annotations:
    kubernetes.io/ingress.global-static-ip-name: ${_STATIC_IP_NAME}
    networking.gke.io/managed-certificates: ${_MANAGED_CERT_NAME}
    kubernetes.io/ingress.allow-http: "false"
    cloud.google.com/load-balancer-type: "External"
    compute.kubernetes.io/service-account-name: ${_KSA_NAME}
    kubernetes.io/ingress.class: "gce"
spec:
  rules:
  - host: ${_HOSTNAME}
    http:
      paths:
      - path: /*
        pathType: ImplementationSpecific
        backend:
          service:
            name: ${_LABEL_NAME}
            port:
              number: ${_SERVER_PORT}

