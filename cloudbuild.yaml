
timeout: 1800s

steps:
  
  - id: "Show variables"
    name: "ubuntu"
    script: |
      #!/usr/bin/env bash
      echo "SUBST Vars not in this file but in application.yaml:  $_KSA_NAME $_LABEL_NAME $_STATIC_IP_NAME $_MANAGED_CERT_NAME $_HOSTNAME"

  - id: "Install envsubst"
    name: "ubuntu"
    script: |
      #!/usr/bin/env bash
      apt update; apt install -y gettext-base; /usr/bin/envsubst < kubernetes/application.yaml > /workspace/application-subst.yaml; cat /workspace/application-subst.yaml

  # Download the .env file
  - name: "gcr.io/cloud-builders/gsutil"
    args: 
    - cp
    - ${_ENV_FILE_PATH}
    - .env

  # Build the image
  - name: "gcr.io/cloud-builders/docker"
    args: 
    - build
    - --build-arg
    - NODE_ENV=${_NODE_ENV}
    - -t
    - ${_CR_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO}/${_SERVICE_NAME}-${_ENV}:${SHORT_SHA}
    - .
      
  # Push the container image to Container Registry
  - name: "gcr.io/cloud-builders/docker"
    args: 
    - push
    - ${_CR_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO}/${_SERVICE_NAME}-${_ENV}:${SHORT_SHA}

  # deploy container image to GKE
  - name: "gcr.io/cloud-builders/gke-deploy"
    args: 
    - run
    - --filename=/workspace/application-subst.yaml
    - --image=us-west1-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO}/${_SERVICE_NAME}-${_ENV}:${SHORT_SHA}
    - --location=${_CR_REGION}
    - --cluster=${_CLUSTER_NAME}
    - --timeout=1200s
    timeout: 1200s

# save the image to the artifact registry
images:
  - "us-west1-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO}/${_SERVICE_NAME}-${_ENV}:${SHORT_SHA}"

# turn all the subsitution variables into env vars
options:
  automapSubstitutions: true

